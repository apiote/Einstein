> W takim razie, serwer po wysłaniu wyniku rzutu kostką, zaczyna odmierzać
> czas. Serwer liczy głosy po upływie czasu lub gdy wszyscy klienci oddadzą
> głos.

Ok; zanotowałem że macie wybrany temat projektu.

Pozdrawiam,
Jan Kończak


On piątek, 25 listopada 2016 11:17:11 CET Adam Pioterek wrote:
> On 24 November 2016 20:45:08 CET, "Jan Kończak" 
<jan.konczak@cs.put.poznan.pl> wrote:
> >> > 1) Jak chcecie obsługiwać brak głosu od podłączonego klienta?
> >> 
> >> 1) Klient będzie miał określoną ilość czasu na oddanie głosu; czas
> >
> >ten jest
> >
> >> liczony przez klienta, który po upływie tego czasu wysyła do serwera
> >> komunikat o braku głosu;
> >
> >To nie wystarczy; klient może po prostu głosu nie przysłać, np. bo
> >stracił
> >dostęp do sieci. Nie jest możliwe wiarygodne sprawdzenie czy druga
> >strona jest
> >jeszcze połączona. TCP nie ma mechanizmów które automatycznie
> >sygnalizowałyby
> >problem z połączeniem (poza keepalive, który jest wysyłany nie częściej
> >niż co
> >2 godziny).
> >
> >On czwartek, 24 listopada 2016 19:46:14 CET you wrote:
> >> 1) Klient będzie miał określoną ilość czasu na oddanie głosu; czas
> >
> >ten jest
> >
> >> liczony przez klienta, który po upływie tego czasu wysyła do serwera
> >> komunikat o braku głosu; 2) zatem po każdym otrzymanym przez serwer
> >
> >głosie,
> >
> >> serwer wysyła do wszystkich informację kto i na co zagłosował; 3)
> >
> >punkty 8b
> >
> >> i 10b: po trzykrotnym remisie serwer dokonuje losowego wyboru; 4)
> >
> >serwer
> >
> >> odrzuca przyłączenie, wysyłając komunikat, że gra już trwa.
> >> 
> >> On Thu, Nov 24, 2016 at 12:09:46PM +0100, Jan Kończak wrote:
> >> > 1) Jak chcecie obsługiwać brak głosu od podłączonego klienta?
> >> > 
> >> > 2) Gracze nawzajem powinni widzieć swoje propozycje.
> >> > 
> >> > 3) Proszę rozwiązać powtarzający się remis w głosowaniu.
> >> > 
> >> > 4) Jak obsługujecie gracza który podłącza się do serwera kiedy gra
> >
> >trwa?
> >
> >> > Dziwne wydaje mi się głosowanie wpierw na to który kamień, potem
> >
> >który
> >
> >> > ruch; bardziej naturalne byłoby głosowanie już na konkretny ruch.
> >
> >Ale
> >
> >> > każdą z tych wersji przyjmę.
> >> > 
> >> > Pozdrawiam,
> >> > Jan Kończak
> >> > 
> >> > On środa, 23 listopada 2016 21:49:55 CET you wrote:
> >> > > Szanowny Panie,
> >> > > 
> >> > > grupa: Marcin Drzewiecki 122472, Adam Pioterek 122446
> >> > > temat projektu: sieciowa implementacja gry turowej „EinStein
> >
> >würfelt
> >
> >> > > nicht”
> >> > > (https://pl.wikipedia.org/wiki/EinStein_w%C3%BCrfelt_nicht) opis:
> >> > > 1. klient wysyła do serwera komunikat inicjujący grę, podając
> >
> >liczbę
> >
> >> > > graczy
> >> > > w grupie; 2. serwer odsyła komunikat o stworzeniu nowej gry;
> >> > > 3. kolejni klienci przyłączają się do gry;
> >> > > 4. serwer odsyła komunikat o przyłączeniu do gry z informacją o
> >> > > przydziale
> >> > > do grupy; 5. serwer losuje początkowe ustawienie kamieni na
> >
> >planszy i
> >
> >> > > rozsyła je do wszystkich klientów; 6. (początek tury) serwer
> >
> >wykonuje
> >
> >> > > rzut
> >> > > sześcienną kostką (losuję liczbę całkowitą z zakresu 1–6) i
> >
> >wysyła wynik
> >
> >> > > do
> >> > > grupy, której jest aktualnie tura; 7. jeśli nie ma na planszy
> >
> >kamienia
> >
> >> > > aktualnej grupy o wylosowanym numerze, klienci zgodnie z regułami
> >> > > głosują
> >> > > na kamień do wybrania; 8. serwer wybiera kamień, na który padło
> >> > > najwięcej
> >> > > głosów i odsyła komunikat o wyborze, podając numer wybranego
> >
> >kamienia;
> >
> >> > > 9.
> >> > > klienci głosują na jeden z możliwych kierunków, w którym wykonany
> >> > > zostanie
> >> > > ruch; 10. serwer wybiera kierunek, na który padło najwięcej
> >
> >głosów i
> >
> >> > > odsyła
> >> > > komunikat o wyborze, podając wybrany kierunek; 11. następuje
> >
> >zmiana
> >
> >> > > aktualnej drużyny i powrót do kroku 6;
> >> > > ---
> >> > > 2a. serwer odrzuca inicjację, komunikując, że aktualnie jest
> >
> >aktywna
> >
> >> > > gra;
> >> > > 
> >> > > 	2a1. koniec przypadku.
> >> > > 
> >> > > 4a. serwer odrzuca przyłączenie, komunikując, że maksymalna
> >
> >liczba
> >
> >> > > graczy
> >> > > została osiągnięta; 4a1. (z perspektywy klienta) koniec
> >
> >przypadku.
> >
> >> > > 7a. jeśli na planszy jest kamień aktualnej grupy o wylosowanym
> >
> >numerze,
> >
> >> > > to
> >> > > serwer wybiera ten kamień i odsyła komunikat, podając ten numer;
> >
> >7a1.
> >
> >> > > powrót do kroku 9
> >> > > 8a. w przypadku remisu serwer wysyła komunikat o potrzebie
> >
> >ponownego
> >
> >> > > głosowania; 8a1. powrót do kroku 7;
> >> > > 8b. w przypadku trzykrotnego remisu, serwer wybiera losowy
> >
> >kamień;
> >
> >> > > 	8b1. powrót do kroku 9;
> >> > > 
> >> > > 9a. jeśli dostępny jest tylko jeden kierunek, serwer wykonuje
> >
> >ruch i
> >
> >> > > odsyła
> >> > > komunikat, podając kierunek; 9a1. powrót do kroku 11;
> >> > > 10a. w przypadku remisu serwer wysyła komunikat o potrzebie
> >
> >ponownego
> >
> >> > > głosowania; 10a1. powrót do kroku 9;
> >> > > 10b. w przypadku trzykrotnego remisu, serwer wybiera losowy
> >
> >kierunek;
> >
> >> > > 	10b1. powrót do kroku 11;
> >> > > 
> >> > > 11a. serwer sprawdza, czy nastąpił koniec gry zgodnie z regułami,
> >
> >jeśli
> >
> >> > > tak, wysyła do wszystkich komunikat o końcu gry, podając, która
> >
> >grupa
> >
> >> > > wygrała; 11a1. koniec przypadku.
> >> > > 
> >> > > W momencie, kiedy którykolwiek klient rozłączy się, gra trwa
> >
> >dalej, a
> >
> >> > > serwer liczy głosy od mniejszej liczby klientów. Jeżeli rozłączy
> >
> >się
> >
> >> > > cała jedna drużyna, serwer wysyła do wszystkich komunikat o końcu
> >
> >gry,
> >
> >> > > podając, że wygrała drużyna, która pozostała w grze. Po
> >
> >jakimkolwiek
> >
> >> > > zakończeniu gry serwer wraca do stanu, w którym może odbierać
> >> > > komunikaty inicjujące nową grę.
> 
> W takim razie, serwer po wysłaniu wyniku rzutu kostką, zaczyna odmierzać
> czas. Serwer liczy głosy po upływie czasu lub gdy wszyscy klienci oddadzą
> głos.
